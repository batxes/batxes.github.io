{
  "projects": [
    {
      "name": "Climate Change Dashboard (Ongoing)",
      "github": "https://github.com/batxes/climate_change_dashboard",
      "description": "Developed an interactive dashboard to visualize historical climate change data from multiple sources. Implemented data scraping, processing, and storage in PostgreSQL. Built the dashboard using Streamlit and deployed it on the cloud for accessibility. Utilized Prefect to design and manage a robust ETL pipeline for seamless data workflows.",
      "image": "cc.png",
      "technologies": [
        "python",
        "docker",
        "postgresql",
        "streamlit",
        "prefect",
        "matplotlib",
        "plotly",
	      "pandas",
	      "numpy"
      ]
    },
    {
      "name": "Satellite Picture Classification (Deep Learning)",
      "github": "https://github.com/batxes/DL-Satellite-picture-classification-project",
      "description": "Developed a machine learning project to classify satellite images into land categories. Leveraged a convolutional neural network (CNN) for training and predictions, implemented a Flask-based API to serve the model, and containerized the application using Docker for portability and scalability.",
      "image": "satellite.jpg",
      "technologies": [
        "python",
        "docker",
	      "tensorflow",
        "scikit-learn",
	      "flask",
	      "gunicorn",
	      "matplotlib",
	      "seaborn",
	      "pandas",
	      "numpy"
      ]
    },
    {
      "name": "Chemical Production Forecasting (Deep Learning)",
      "github": "https://github.com/batxes/Chemical-Production-Forecasting",
      "description": "Developed an LSTM model to predict key chemical production outputs from multivariate timeseries data from six reactors, optimizing industrial process forecasting.",
      "image": "chemicals.jpeg",
      "technologies": [
        "python",
	      "scikit-learn",
	      "tensorflow",
        "matplotlib",
        "plotly",
	      "pandas",
	      "numpy"
      ]
    },
    {
      "name": "Rain Prediction (Machine Learning)",
      "github": "https://github.com/batxes/ML-Rain-prediction-project",
      "description": "Developed a machine learning project to predict the likelihood of rain for the following day. Utilized an XGBoost model for training and predictions, implemented a Flask-based API to serve the model, containerized the application using Docker, and deployed it on AWS Elastic Beanstalk for scalable and reliable access.",
      "image": "kangaroos.jpg",
      "technologies": [
        "python",
        "aws",
        "docker",
	      "scikit-learn",
	      "flask",
	      "gunicorn",
	      "matplotlib",
	      "seaborn",
	      "pandas",
	      "numpy"
      ]
    },
     {
      "name": "Drought Prediction (MLOps)",
      "github": "https://github.com/batxes/MLOPS-Drought-predictor-project",
      "description": "Developed a robust machine learning pipeline utilizing an XGBoost model for training and predictions. Managed the model lifecycle and experiment tracking with MLflow, and orchestrated workflows using Prefect. Containerized the model with Docker for deployment, featuring a Flask-based prediction API served by Gunicorn and testable through a dedicated script. Monitored training and prediction metrics with Prometheus, visualized in Grafana. Ensured high code quality through unit/integration tests, linting, formatting, pre-commit hooks, and a CI/CD pipeline. Streamlined automation and execution using a Makefile.",
      "image": "mlops.jpg",
      "technologies": [
        "python",
        "mlflow",
        "prefect",
        "grafana",
        "prometheus",
        "docker",
        "docker-compose",
        "scikit-learn",
        "numpy",
        "pandas",
	      "matplotlib",
        "unittest"
      ]
    },
    {
      "name": "Steel Type Classification (LLM)",
      "github": "https://github.com/batxes/LLM_steel_classification",
      "description": "Developed a machine learning pipeline to classify steel products into categories. Processed three diverse files, dynamically handling multi-tab Excel sheets and extracting embedded tables. Leveraged regex for feature extraction and data preparation. Utilized the Transformers library to fine-tune a pre-trained BERT model, evaluated its performance, and saved the trained model. Implemented a test script with predefined steel properties to validate category predictions.",
      "image": "steel.webp",
      "technologies": [
        "python",
        "torch",
        "scikit-learn",
        "numpy",
        "transformers",
	      "matplotlib"
      ]
    },
    {
      "name": "E-Commerce logistics (Discrete Event Simulation)",
      "github": "https://github.com/batxes/e-commerce_logistics_network_simulator",
      "description": "Discrete event simulation of e-commerce logistics, modeling warehouse operations and deliveries across Germany with real-time visualization. ",
      "image": "warehouses.png",
      "technologies": [
        "python",
        "simpy",
        "numpy",
        "pandas",
	      "plotly",
        "folium"
      ]
    },
    {
      "name": "Reach Objective (Multi Agent Reinforcement Learning)",
      "github": "https://github.com/batxes/MARL_reach_objective",
      "description": "RL project where multiple agents learn the fastest way to reach a coordinate in a grid.",
      "image": "marl.png",
      "technologies": [
        "python",
        "torch",
        "numpy",
        "gym",
	      "matplotlib"
      ]
    },
    {
      "name": "4Cin: Software to generate 3D chromatin models",
      "github": "https://github.com/batxes/4cin",
      "description": "The software uses 4C-seq experiments to trilaterate the position of genomic loci and generate 3D model structures. The core of the modeling is based on IMP (https://integrativemodeling.org/)",
      "image": "4cin.png",
      "technologies": [
        "python",
        "scipy",
        "numpy",
	      "matplotlib"
      ]
    }
  ]
}
